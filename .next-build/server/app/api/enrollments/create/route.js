(()=>{var e={};e.id=4228,e.ids=[4228],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11997:e=>{"use strict";e.exports=require("punycode")},27910:e=>{"use strict";e.exports=require("stream")},28086:(e,r,s)=>{"use strict";s.d(r,{t:()=>n});var t=s(34386),o=s(44999);async function n(){let e=await (0,o.UL)();return(0,t.createServerClient)("https://qrowzznnnarfogfbnnow.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFyb3d6em5ubmFyZm9nZmJubm93Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIwNjg1MzUsImV4cCI6MjA2NzY0NDUzNX0.MkCeFSLoOyGl-y1_eZTXTXXV8hGOJM7WuBV7gvLc_rI",{cookies:{getAll:()=>e.getAll(),setAll(r){try{r.forEach(({name:r,value:s,options:t})=>e.set(r,s,t))}catch{}}}})}},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},34631:e=>{"use strict";e.exports=require("tls")},39727:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},47990:()=>{},55511:e=>{"use strict";e.exports=require("crypto")},55591:e=>{"use strict";e.exports=require("https")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:e=>{"use strict";e.exports=require("zlib")},78335:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},79551:e=>{"use strict";e.exports=require("url")},81630:e=>{"use strict";e.exports=require("http")},81672:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>x,routeModule:()=>c,serverHooks:()=>m,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>p});var t={};s.r(t),s.d(t,{POST:()=>l});var o=s(96559),n=s(48088),i=s(37719),a=s(32190),u=s(28086);async function l(e){try{let{courseId:r}=await e.json();if(!r)return a.NextResponse.json({error:"Missing required field: courseId"},{status:400});console.log("API: Creating enrollment record for course:",r);let s=await (0,u.t)(),{data:{user:t},error:o}=await s.auth.getUser();if(o||!t)return console.error("API: Authentication error:",o),a.NextResponse.json({error:"Authentication required. Please sign in."},{status:401});let n=t.id,{data:i}=await s.from("users").select("membership, role").eq("id",n).single();if(i?.membership==="free")return a.NextResponse.json({error:"Subscription required to enroll",membership:"free",redirect:"/payment"},{status:403});let{data:l,error:c}=await s.from("courses").select("id").eq("id",r).single();if(c||!l)return console.error("API: Invalid courseId provided for enrollment:",r,c),a.NextResponse.json({error:"Invalid courseId. Course does not exist."},{status:400});let{data:d}=await s.from("enrollments").select("id").eq("user_id",n).eq("course_id",r).single();if(d){console.log("API: Enrollment already exists, ensuring status active");let{error:e}=await s.from("enrollments").update({status:"active",enrolled_at:new Date().toISOString()}).eq("user_id",n).eq("course_id",r);if(e)return console.error("API: Error updating enrollment:",e),a.NextResponse.json({error:"Failed to update enrollment record"},{status:500});return a.NextResponse.json({success:!0,message:"Enrollment updated successfully",updated:!0})}let{error:p}=await s.from("enrollments").insert({user_id:n,course_id:r,status:"active",enrolled_at:new Date().toISOString()});if(p){if("23505"===p.code||p.message?.includes("enrollments_user_id_course_id_key"))return console.log("API: Enrollment already exists (unique violation). Treating as success"),a.NextResponse.json({success:!0,message:"User already enrolled in this course",alreadyEnrolled:!0});return console.error("API: Error creating enrollment:",p),a.NextResponse.json({error:"Failed to create enrollment record"},{status:500})}return a.NextResponse.json({success:!0,message:"Enrollment created successfully"})}catch(e){if(console.error("API: Enrollment creation error:",e),"23505"===e.code&&e.message?.includes("enrollments_user_id_course_id_key"))return console.log("API: User already enrolled in this course, treating as success"),a.NextResponse.json({success:!0,message:"User already enrolled in this course",alreadyEnrolled:!0});return a.NextResponse.json({error:e.message||"Error creating enrollment"},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/enrollments/create/route",pathname:"/api/enrollments/create",filename:"route",bundlePath:"app/api/enrollments/create/route"},resolvedPagePath:"C:\\Users\\Konan\\Documents\\MONSPACE\\CourseWebsite-1\\app\\api\\enrollments\\create\\route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:d,workUnitAsyncStorage:p,serverHooks:m}=c;function x(){return(0,i.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:p})}},91645:e=>{"use strict";e.exports=require("net")},94735:e=>{"use strict";e.exports=require("events")},96487:()=>{}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[4447,580,6570,645,4386,4999],()=>s(81672));module.exports=t})();