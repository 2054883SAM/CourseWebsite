(()=>{var e={};e.id=5700,e.ids=[5700],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78205:(e,o,r)=>{"use strict";r.r(o),r.d(o,{patchFetch:()=>x,routeModule:()=>l,serverHooks:()=>h,workAsyncStorage:()=>u,workUnitAsyncStorage:()=>c});var t={};r.r(t),r.d(t,{OPTIONS:()=>d,POST:()=>p});var s=r(96559),a=r(48088),i=r(37719),n=r(32190);async function p(e){console.log("\uD83D\uDCE4 [VdoCipher Upload] API route called");try{let o=await e.formData(),r=o.get("file"),t=JSON.parse(o.get("uploadCredentials"));if(console.log("\uD83D\uDCE4 [VdoCipher Upload] Request data:",{hasFile:!!r,fileName:r?.name,fileSize:r?`${(r.size/1024/1024).toFixed(2)} MB`:"N/A",hasCredentials:!!t,uploadLink:t?.uploadLink}),!r)return console.log("❌ [VdoCipher Upload] Missing file"),n.NextResponse.json({error:"Video file is required"},{status:400});if(!t)return console.log("❌ [VdoCipher Upload] Missing upload credentials"),n.NextResponse.json({error:"Upload credentials are required"},{status:400});console.log("\uD83D\uDCE4 [VdoCipher Upload] Creating FormData for VdoCipher...");let s=new FormData;s.append("policy",t.policy),s.append("key",t.key),s.append("x-amz-signature",t["x-amz-signature"]),s.append("x-amz-algorithm",t["x-amz-algorithm"]),s.append("x-amz-date",t["x-amz-date"]),s.append("x-amz-credential",t["x-amz-credential"]),s.append("success_action_status","201"),s.append("success_action_redirect",""),s.append("file",r),console.log("\uD83D\uDCE4 [VdoCipher Upload] Uploading to VdoCipher at:",t.uploadLink);let a=await fetch(t.uploadLink,{method:"POST",body:s});if(console.log("\uD83D\uDCE4 [VdoCipher Upload] VdoCipher upload response status:",a.status),!a.ok){let e=await a.text();throw console.error("❌ [VdoCipher Upload] VdoCipher upload error:",a.status,e),Error(`Upload failed: ${a.status} ${a.statusText}`)}let i=await a.text();return console.log("✅ [VdoCipher Upload] Upload successful, response:",i),n.NextResponse.json({success:!0,message:"Video uploaded successfully"},{status:201,headers:{"Access-Control-Allow-Origin":"*"}})}catch(e){return console.error("❌ [VdoCipher Upload] Error uploading video to VdoCipher:",e),n.NextResponse.json({error:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function d(){return new n.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}let l=new s.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/upload-video/vdocipher-upload/route",pathname:"/api/upload-video/vdocipher-upload",filename:"route",bundlePath:"app/api/upload-video/vdocipher-upload/route"},resolvedPagePath:"C:\\Users\\Konan\\Documents\\MONSPACE\\CourseWebsite-1\\app\\api\\upload-video\\vdocipher-upload\\route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:u,workUnitAsyncStorage:c,serverHooks:h}=l;function x(){return(0,i.patchFetch)({workAsyncStorage:u,workUnitAsyncStorage:c})}},78335:()=>{},96487:()=>{}};var o=require("../../../../webpack-runtime.js");o.C(e);var r=e=>o(o.s=e),t=o.X(0,[4447,580],()=>r(78205));module.exports=t})();